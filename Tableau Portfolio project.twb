<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20221.22.0324.2209                               -->
<workbook original-version='18.1' source-build='2022.1.0 (20221.22.0324.2209)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='Sheet1 (Tableau Table 2) (2)' inline='true' name='federated.1kldrfd121li9p1eac35803z4ngp' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau Table 2' name='excel-direct.1sfjv7c1mmd1xs180jgjm068pl60'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Lenovo/Desktop/Career/SQL Server/Link 21/Tableau Table 2.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1sfjv7c1mmd1xs180jgjm068pl60' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='TotalDeathCount' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1sfjv7c1mmd1xs180jgjm068pl60' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='TotalDeathCount' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B7:no:A1:B7:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_F25A834E1D5B48CA9FAD4E9D0F64D977]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalDeathCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TotalDeathCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>TotalDeathCount</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_F25A834E1D5B48CA9FAD4E9D0F64D977]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Total Death Count' datatype='integer' name='[TotalDeathCount]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_F25A834E1D5B48CA9FAD4E9D0F64D977]' role='measure' type='quantitative' />
      <column caption='Continent' datatype='string' name='[location]' role='dimension' type='nominal' />
      <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:location:nk]' palette='blue_teal_10_0' type='palette'>
            <map to='#2c5985'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#32759a'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#3992b0'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#5eafc0'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#8cc9cd'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#bce4d8'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Lebanon&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_F25A834E1D5B48CA9FAD4E9D0F64D977'>
            <properties context=''>
              <relation connection='excel-direct.1sfjv7c1mmd1xs180jgjm068pl60' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
                  <column datatype='string' name='location' ordinal='0' />
                  <column datatype='integer' name='TotalDeathCount' ordinal='1' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (Tableau Table 1)' inline='true' name='federated.0m6gnfp1gzs0i71c4ibot0nr282s' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau Table 1' name='excel-direct.0b25bf40i0ox8j1cxjcy51unq9zi'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Lenovo/Desktop/Career/SQL Server/Link 21/Tableau Table 1.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0b25bf40i0ox8j1cxjcy51unq9zi' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
            <column datatype='integer' name='total_cases' ordinal='0' />
            <column datatype='integer' name='total_deaths' ordinal='1' />
            <column datatype='real' name='DeathPercentage' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0b25bf40i0ox8j1cxjcy51unq9zi' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
            <column datatype='integer' name='total_cases' ordinal='0' />
            <column datatype='integer' name='total_deaths' ordinal='1' />
            <column datatype='real' name='DeathPercentage' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C2:no:A1:C2:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_cases]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_cases</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_FAEF655F591F4657A2F83E94A5539705]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_deaths]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_deaths</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_FAEF655F591F4657A2F83E94A5539705]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DeathPercentage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[DeathPercentage]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>DeathPercentage</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_FAEF655F591F4657A2F83E94A5539705]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Death Percentage' datatype='real' name='[DeathPercentage]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_FAEF655F591F4657A2F83E94A5539705]' role='measure' type='quantitative' />
      <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
      <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Lebanon&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_FAEF655F591F4657A2F83E94A5539705'>
            <properties context=''>
              <relation connection='excel-direct.0b25bf40i0ox8j1cxjcy51unq9zi' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
                  <column datatype='integer' name='total_cases' ordinal='0' />
                  <column datatype='integer' name='total_deaths' ordinal='1' />
                  <column datatype='real' name='DeathPercentage' ordinal='2' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (Tableau Table 3)' inline='true' name='federated.1sn09ul02zjnly1esjf5w10q15ye' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau Table 3' name='excel-direct.0s0dtni1kb4waa11wbo0r09wstg5'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Lenovo/Desktop/Career/SQL Server/Link 21/Tableau Table 3.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0s0dtni1kb4waa11wbo0r09wstg5' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:D10001:no:A1:D10001:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='2' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0s0dtni1kb4waa11wbo0r09wstg5' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:D10001:no:A1:D10001:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='2' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D10001:no:A1:D10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_CD51A8835BF84B37A9F6050ACE8468B2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_CD51A8835BF84B37A9F6050ACE8468B2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HighestInfectionCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[HighestInfectionCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>HighestInfectionCount</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_CD51A8835BF84B37A9F6050ACE8468B2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PercentPopulationInfected</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PercentPopulationInfected]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>PercentPopulationInfected</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_CD51A8835BF84B37A9F6050ACE8468B2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Highest Infection Count' datatype='integer' name='[HighestInfectionCount]' role='measure' type='quantitative' />
      <column datatype='string' name='[Location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_CD51A8835BF84B37A9F6050ACE8468B2]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Lebanon&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_CD51A8835BF84B37A9F6050ACE8468B2'>
            <properties context=''>
              <relation connection='excel-direct.0s0dtni1kb4waa11wbo0r09wstg5' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:D10001:no:A1:D10001:0' header='yes' outcome='6'>
                  <column datatype='string' name='Location' ordinal='0' />
                  <column datatype='integer' name='Population' ordinal='1' />
                  <column datatype='integer' name='HighestInfectionCount' ordinal='2' />
                  <column datatype='real' name='PercentPopulationInfected' ordinal='3' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (Tableau Table 4)' inline='true' name='federated.1e1vn8y0yqfmp418s6cph0n1n4cv' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau Table 4' name='excel-direct.1y3cyji106ag67191ku9b0y88gxc'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Lenovo/Desktop/Career/SQL Server/Link 21/Tableau Table 4.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1y3cyji106ag67191ku9b0y88gxc' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='date' name='date' ordinal='2' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1y3cyji106ag67191ku9b0y88gxc' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='date' name='date' ordinal='2' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:E10001:no:A1:E10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_2221A361800A4238B62959644DB79729]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_2221A361800A4238B62959644DB79729]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_2221A361800A4238B62959644DB79729]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HighestInfectionCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[HighestInfectionCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>HighestInfectionCount</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_2221A361800A4238B62959644DB79729]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PercentPopulationInfected</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PercentPopulationInfected]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>PercentPopulationInfected</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_2221A361800A4238B62959644DB79729]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Highest Infection Count' datatype='integer' name='[HighestInfectionCount]' role='measure' type='quantitative' />
      <column datatype='string' name='[Location]' role='dimension' type='nominal' />
      <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_2221A361800A4238B62959644DB79729]' role='measure' type='quantitative' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Location:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Northern Mariana Islands&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Low income&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;High income&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pitcairn&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;European Union&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;United States Virgin Islands&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Guam&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lower middle income&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Micronesia (country)&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Niue&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tokelau&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bonaire Sint Eustatius and Saba&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sint Maarten (Dutch part)&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Timor&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Vatican&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Wallis and Futuna&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;International&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Northern Cyprus&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Upper middle income&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cook Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Macao&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Saint Pierre and Miquelon&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Lebanon&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_2221A361800A4238B62959644DB79729'>
            <properties context=''>
              <relation connection='excel-direct.1y3cyji106ag67191ku9b0y88gxc' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
                  <column datatype='string' name='Location' ordinal='0' />
                  <column datatype='integer' name='Population' ordinal='1' />
                  <column datatype='date' name='date' ordinal='2' />
                  <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
                  <column datatype='real' name='PercentPopulationInfected' ordinal='4' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Global Numbers &#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Tableau Table 1)' name='federated.0m6gnfp1gzs0i71c4ibot0nr282s' />
          </datasources>
          <datasource-dependencies datasource='federated.0m6gnfp1gzs0i71c4ibot0nr282s'>
            <column caption='Death Percentage' datatype='real' name='[DeathPercentage]' role='measure' type='quantitative' />
            <column-instance column='[DeathPercentage]' derivation='Sum' name='[sum:DeathPercentage:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_cases]' derivation='Sum' name='[sum:total_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_deaths]' derivation='Sum' name='[sum:total_deaths:qk]' pivot='key' type='quantitative' />
            <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
            <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0m6gnfp1gzs0i71c4ibot0nr282s].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0m6gnfp1gzs0i71c4ibot0nr282s].[sum:DeathPercentage:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0m6gnfp1gzs0i71c4ibot0nr282s].[sum:total_cases:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0m6gnfp1gzs0i71c4ibot0nr282s].[sum:total_deaths:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0m6gnfp1gzs0i71c4ibot0nr282s].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0m6gnfp1gzs0i71c4ibot0nr282s].[sum:total_cases:qk]&quot;</bucket>
              <bucket>&quot;[federated.0m6gnfp1gzs0i71c4ibot0nr282s].[sum:total_deaths:qk]&quot;</bucket>
              <bucket>&quot;[federated.0m6gnfp1gzs0i71c4ibot0nr282s].[sum:DeathPercentage:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0m6gnfp1gzs0i71c4ibot0nr282s].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0m6gnfp1gzs0i71c4ibot0nr282s].[:Measure Names]' value='177' />
            <format attr='color' value='#000000' />
            <format attr='text-format' field='[federated.0m6gnfp1gzs0i71c4ibot0nr282s].[sum:DeathPercentage:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='height' value='50' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' scope='cols' value='#5b69c8' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' value='#c0c0c0' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-visibility' value='on' />
            <format attr='line-pattern-only' value='solid' />
            <format attr='stroke-size' value='1' />
            <format attr='stroke-color' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0m6gnfp1gzs0i71c4ibot0nr282s].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.0m6gnfp1gzs0i71c4ibot0nr282s].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{F521E3B9-0019-4EA4-8C34-3C3EFF10D385}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Total Deaths </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Tableau Table 2) (2)' name='federated.1kldrfd121li9p1eac35803z4ngp' />
          </datasources>
          <datasource-dependencies datasource='federated.1kldrfd121li9p1eac35803z4ngp'>
            <column caption='Total Death Count' datatype='integer' name='[TotalDeathCount]' role='measure' type='quantitative' />
            <column caption='Continent' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[TotalDeathCount]' derivation='Sum' name='[sum:TotalDeathCount:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.1kldrfd121li9p1eac35803z4ngp].[none:location:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Europe&quot;</bucket>
              <bucket>&quot;North America&quot;</bucket>
              <bucket>&quot;Asia&quot;</bucket>
              <bucket>&quot;South America&quot;</bucket>
              <bucket>&quot;Africa&quot;</bucket>
              <bucket>&quot;Oceania&quot;</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1kldrfd121li9p1eac35803z4ngp].[none:location:nk]' value='132' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1kldrfd121li9p1eac35803z4ngp].[none:location:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#f28e2b' />
                <format attr='size' value='1.0544751882553101' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1kldrfd121li9p1eac35803z4ngp].[sum:TotalDeathCount:qk]</rows>
        <cols>[federated.1kldrfd121li9p1eac35803z4ngp].[none:location:nk]</cols>
      </table>
      <simple-id uuid='{C3D90096-0B76-44B5-A4DF-933F86270098}' />
    </worksheet>
    <worksheet name='Sheet 3'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Percent Population Infected Per Country </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Tableau Table 3)' name='federated.1sn09ul02zjnly1esjf5w10q15ye' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1sn09ul02zjnly1esjf5w10q15ye'>
            <column datatype='string' name='[Location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
            <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[PercentPopulationInfected]' derivation='Sum' name='[sum:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1sn09ul02zjnly1esjf5w10q15ye].[Longitude (generated)]' field-type='quantitative' max='4555838.6778070033' min='-18086382.212659374' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1sn09ul02zjnly1esjf5w10q15ye].[Latitude (generated)]' field-type='quantitative' max='7572763.4390924554' min='-5452792.9058829267' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1sn09ul02zjnly1esjf5w10q15ye].[sum:PercentPopulationInfected:qk]' palette='red_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1sn09ul02zjnly1esjf5w10q15ye].[sum:PercentPopulationInfected:qk]' value='Percent Population Infected'>
              <formatted-text>
                <run>Percent Population Infected</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='outdoors' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1sn09ul02zjnly1esjf5w10q15ye].[none:Location:nk]' />
              <color column='[federated.1sn09ul02zjnly1esjf5w10q15ye].[sum:PercentPopulationInfected:qk]' />
              <geometry column='[federated.1sn09ul02zjnly1esjf5w10q15ye].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1sn09ul02zjnly1esjf5w10q15ye].[Latitude (generated)]</rows>
        <cols>[federated.1sn09ul02zjnly1esjf5w10q15ye].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{46407C18-9597-44B1-91D6-75FC7B83DBBD}' />
    </worksheet>
    <worksheet name='Sheet 4'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Tableau Table 4)' name='federated.1e1vn8y0yqfmp418s6cph0n1n4cv' />
          </datasources>
          <datasource-dependencies datasource='federated.1e1vn8y0yqfmp418s6cph0n1n4cv'>
            <column datatype='string' name='[Location]' role='dimension' type='nominal' />
            <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
            <column-instance column='[PercentPopulationInfected]' derivation='Avg' name='[avg:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1e1vn8y0yqfmp418s6cph0n1n4cv].[none:Location:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Canada&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;China&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Lebanon&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Mexico&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;United Kingdom&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1e1vn8y0yqfmp418s6cph0n1n4cv].[none:Location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1e1vn8y0yqfmp418s6cph0n1n4cv].[none:Location:nk]' />
              <text column='[federated.1e1vn8y0yqfmp418s6cph0n1n4cv].[none:Location:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1e1vn8y0yqfmp418s6cph0n1n4cv].[avg:PercentPopulationInfected:qk]</rows>
        <cols>[federated.1e1vn8y0yqfmp418s6cph0n1n4cv].[tmn:date:qk]</cols>
      </table>
      <simple-id uuid='{A232E057-7CF9-4F90-BD17-C12428EB7CDC}' />
    </worksheet>
    <worksheet name='Sheet 4 (2)'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Percent Population Infection Forcasting </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Tableau Table 4)' name='federated.1e1vn8y0yqfmp418s6cph0n1n4cv' />
          </datasources>
          <datasource-dependencies datasource='federated.1e1vn8y0yqfmp418s6cph0n1n4cv'>
            <column datatype='string' name='[Location]' role='dimension' type='nominal' />
            <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
            <column-instance column='[PercentPopulationInfected]' derivation='Avg' name='[avg:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[PercentPopulationInfected]' derivation='Avg' forecast-column-base='[avg:PercentPopulationInfected:qk]' forecast-column-type='forecast-value' name='[fVal:avg:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1e1vn8y0yqfmp418s6cph0n1n4cv].[none:Location:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Canada&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;China&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Lebanon&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Mexico&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;United Kingdom&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1e1vn8y0yqfmp418s6cph0n1n4cv].[none:Location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1e1vn8y0yqfmp418s6cph0n1n4cv].[tmn:date:qk]' scope='cols' value='Month' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1e1vn8y0yqfmp418s6cph0n1n4cv].[none:Location:nk]' />
              <text column='[federated.1e1vn8y0yqfmp418s6cph0n1n4cv].[none:Location:nk]' />
              <color column='[federated.1e1vn8y0yqfmp418s6cph0n1n4cv].[none:Forecast Indicator:nk]' />
              <text column='[federated.1e1vn8y0yqfmp418s6cph0n1n4cv].[fVal:avg:PercentPopulationInfected:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1e1vn8y0yqfmp418s6cph0n1n4cv].[fVal:avg:PercentPopulationInfected:qk]</rows>
        <cols>[federated.1e1vn8y0yqfmp418s6cph0n1n4cv].[tmn:date:qk]</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-missing' ignore-last='1' model-type='auto-season' range-type='auto' show-prediction-bands='true' />
      </table>
      <simple-id uuid='{532F6C19-7A19-4714-AEC0-37D6DA448A5E}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 4'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98142' id='8' param='horz' type-v2='layout-flow' w='98902' x='549' y='929'>
            <zone h='98142' id='6' type-v2='layout-basic' w='87913' x='549' y='929'>
              <zone h='24536' id='3' name='Sheet 1' w='43957' x='549' y='929'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='28077' id='5' name='Sheet 2' w='43957' x='549' y='25465'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='52613' id='10' name='Sheet 3' w='43956' x='44506' y='929'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='45529' id='12' name='Sheet 4 (2)' w='76924' x='549' y='53542'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='45529' id='13' name='Sheet 4 (2)' pane-specification-id='0' param='[federated.1e1vn8y0yqfmp418s6cph0n1n4cv].[none:Location:nk]&#10;[federated.1e1vn8y0yqfmp418s6cph0n1n4cv].[none:Forecast Indicator:nk]' type-v2='color' w='10989' x='77473' y='53542'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98142' id='7' is-fixed='true' param='vert' type-v2='layout-flow' w='10989' x='88462' y='929'>
              <zone h='18118' id='9' name='Sheet 2' pane-specification-id='0' param='[federated.1kldrfd121li9p1eac35803z4ngp].[none:location:nk]' type-v2='color' w='10989' x='88462' y='929'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone fixed-size='314' h='37398' id='11' is-fixed='true' name='Sheet 3' pane-specification-id='0' param='[federated.1sn09ul02zjnly1esjf5w10q15ye].[sum:PercentPopulationInfected:qk]' type-v2='color' w='10989' x='88462' y='19047'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1250' minheight='1250' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='17' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98142' id='16' param='vert' type-v2='layout-flow' w='98902' x='549' y='929'>
                <zone fixed-size='189' h='24536' id='3' is-fixed='true' name='Sheet 1' w='43957' x='549' y='929'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='52613' id='10' is-fixed='true' name='Sheet 3' w='43956' x='44506' y='929'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='314' h='37398' id='11' name='Sheet 3' pane-specification-id='0' param='[federated.1sn09ul02zjnly1esjf5w10q15ye].[sum:PercentPopulationInfected:qk]' type-v2='color' w='10989' x='88462' y='19047'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='216' h='28077' id='5' is-fixed='true' name='Sheet 2' w='43957' x='549' y='25465'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='18118' id='9' name='Sheet 2' pane-specification-id='0' param='[federated.1kldrfd121li9p1eac35803z4ngp].[none:location:nk]' type-v2='color' w='10989' x='88462' y='929'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='45529' id='12' is-fixed='true' name='Sheet 4 (2)' w='76924' x='549' y='53542'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='45529' id='13' name='Sheet 4 (2)' pane-specification-id='0' param='[federated.1e1vn8y0yqfmp418s6cph0n1n4cv].[none:Location:nk]&#10;[federated.1e1vn8y0yqfmp418s6cph0n1n4cv].[none:Forecast Indicator:nk]' type-v2='color' w='10989' x='77473' y='53542'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{7E768756-87F1-483C-9BA8-8DE6A334D540}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='115'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0m6gnfp1gzs0i71c4ibot0nr282s].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1AFFEBD0-6D53-4FB4-B99A-B92ABE61D202}' />
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='300'>
            <card pane-specification-id='0' param='[federated.1kldrfd121li9p1eac35803z4ngp].[none:location:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1kldrfd121li9p1eac35803z4ngp].[none:location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{02F6CEE6-6E10-4B84-8DF7-F85D9FC07FA7}' />
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1sn09ul02zjnly1esjf5w10q15ye].[sum:PercentPopulationInfected:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1sn09ul02zjnly1esjf5w10q15ye].[none:Location:nk]</field>
            <field>[federated.1sn09ul02zjnly1esjf5w10q15ye].[sum:PercentPopulationInfected:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{CCA0BAE4-44C6-47FE-B12D-36CF34E765AD}' />
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1e1vn8y0yqfmp418s6cph0n1n4cv].[none:Location:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1e1vn8y0yqfmp418s6cph0n1n4cv].[none:Location:nk]</field>
            <field>[federated.1e1vn8y0yqfmp418s6cph0n1n4cv].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2DE3B93D-FA12-4C2A-B81B-D05D883B4243}' />
    </window>
    <window class='worksheet' name='Sheet 4 (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1e1vn8y0yqfmp418s6cph0n1n4cv].[none:Location:nk]&#10;[federated.1e1vn8y0yqfmp418s6cph0n1n4cv].[none:Forecast Indicator:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1e1vn8y0yqfmp418s6cph0n1n4cv].[none:Forecast Indicator:nk]</field>
            <field>[federated.1e1vn8y0yqfmp418s6cph0n1n4cv].[none:Location:nk]</field>
            <field>[federated.1e1vn8y0yqfmp418s6cph0n1n4cv].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{58BEA3A1-51DC-412D-ACEE-A352DEFADC48}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 4'>
      <viewpoints>
        <viewpoint name='Sheet 1' />
        <viewpoint name='Sheet 2'>
          <zoom type='entire-view' />
          <selection-collection>
            <node-selection select-tuples='false'>
              <oriented-node-reference orientation='horizontal'>
                <node-reference>
                  <fields>
                    <field>[federated.1kldrfd121li9p1eac35803z4ngp].[none:location:nk]</field>
                  </fields>
                  <multibucket>
                    <bucket>&quot;Oceania&quot;</bucket>
                  </multibucket>
                </node-reference>
                <page-reference />
              </oriented-node-reference>
            </node-selection>
          </selection-collection>
          <highlight>
            <color-one-way>
              <field>[federated.1kldrfd121li9p1eac35803z4ngp].[none:location:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Sheet 3'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='Sheet 4 (2)'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.1e1vn8y0yqfmp418s6cph0n1n4cv].[none:Forecast Indicator:nk]</field>
              <field>[federated.1e1vn8y0yqfmp418s6cph0n1n4cv].[none:Location:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{618A664F-B1B7-464D-9FA5-E0ECF6A61296}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 4' width='192'>
      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
    </thumbnail>
    <thumbnail height='74' name='Sheet 1' width='192'>
      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
      pth99AkKuQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 4' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 4 (2)' width='192'>
      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
      gaSW9v8BE+1lKyKYGl4AAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
